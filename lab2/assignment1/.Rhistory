setwd("C:/Users/ebybe/OneDrive - LinkÃ¶pings universitet/TDDE01/Lab2")
library(dplyr)
library(glmnet)
#Read the data
Dataframe=read.csv("tecator.csv", header=TRUE)
library(dplyr)
library(glmnet)
#Read the data
Dataframe=read.csv("tecator.csv", header=TRUE)
setwd("~/TDDE01/TDDE01-Labs/lab2/assignment1")
library(dplyr)
library(glmnet)
#Read the data
Dataframe=read.csv("tecator.csv", header=TRUE)
#Divide the data into test and training (50/50)
n = dim(Dataframe)[1]
set.seed(12345)
id = sample(1:n, floor(n*0.5))
train = Dataframe[id, ]
test =  Dataframe[-id,]
######### Question 1 ##########
# Linear regression on fat against the different channels
#Select the data that is to be used in this question, i.e. Fat and the different channels
train = train %>% select(2:102)
test = test %>% select(2:102)
# Fit the training data to a model
model1 = lm(Fat~., data = train)
summary(model1)
#Use the model to predict values of the training and test data
predicted_train = predict(model1, train)
predicted_test = predict(model1, test)
#Calculate the Mean square error for the training and test data
mse_train = mean((train$Fat - predicted_train)^2)
mse_test = mean((test$Fat - predicted_test)^2)
mse_train
mse_test
######### Question 2 ##########
#theta_hat = mse + lambda * sum((abs(model1$coefficients))) #Goal is to minimize theta_hat
######### Question 3 ##########
covariates = as.matrix(train[1:100])
lasso_model = glmnet(covariates, train$Fat, alpha = 1)
plot(lasso_model, xvar = "lambda", label = TRUE)
######### Question 4 ##########
ridge_model = glmnet(covariates, train$Fat, alpha = 0)
plot(ridge_model, xvar = "lambda", label = TRUE)
######### Question 5 ##########
lasso_model_cv = cv.glmnet(covariates, train$Fat, alpha = 1, family = "gaussian")
plot(lasso_model_cv)
cat("Lambda min =", lasso_model_cv$lambda.min)
lasso_optimal = glmnet(covariates, train$Fat, alpha = 1, family = "gaussian", lambda = lasso_model_cv$lambda.min)
coef(lasso_optimal, "lambda.min")
test_covariates = as.matrix(test[1:100])
y_hat = predict(lasso_optimal, test_covariates)
y = test$Fat
plot(y_hat, y)
